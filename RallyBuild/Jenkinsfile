pipeline {
    agent any

    stages {
        stage('checkout_script') {
            steps {
                git changelog: false, credentialsId: '46d318e0-7de7-49ab-86ae-1669225823c1', poll: false, url: 'https://github.com/vekatkriish/apigee.git'
            }
        }
        stage('resolve_task') {
            steps {
                script{
                    echo env.folderName+'****'
                    result = sh (script: 'git ls-tree -d --name-only master ${folderName}', returnStdout: true).trim()
                    if(result == env.folderName){
                        sh 'git branch apigee-v1'
                    }else{
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: '46d318e0-7de7-49ab-86ae-1669225823c1', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {
                             String encoded_password = java.net.URLEncoder.encode(env.GIT_PASSWORD, "UTF-8")
                             sh 'mkdir ${folderName} && touch ${folderName}/.keep'
                             sh 'git add ${folderName}/*'
                             sh 'git commit -m "${folderName} folder created"'
                             sh 'git status'
                             gitrepo = 'github.com/vekatkriish/apigee.git'
                             dir ('RallyBuild') {
                                sh 'chmod +x gitcommit.sh'
                                ret = sh(script: './gitcommit.sh '+ env.GIT_USERNAME +' '+encoded_password+' '+gitrepo, returnStdout: true).trim()
                                echo 'Git Commit & Push Status: '+ret
                                if(ret == 'OK'){
                                    sh 'git branch apigee-v1'
                                }else{
                                    error 'git commit error'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            script{
                dir ('RallyBuild') {
                    sh 'python updateTask.py $fmtId $notes $BUILD_URL'
                }
            script{
                mail (to: env.notes.split(';')[0].trim(),
                     subject: 'Job '+env.JOB_NAME+' '+env.BUILD_NUMBER+' is sucesses',
                    body: "please visit {$BUILD_URL} for more details.");
            }
            }
        }
        failure {
            echo 'failed build'
        }
    }
}